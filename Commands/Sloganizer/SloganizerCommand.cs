using DSharpPlus;
using DSharpPlus.CommandsNext;
using DSharpPlus.CommandsNext.Attributes;
using DSharpPlus.Entities;
using DSharpPlus.SlashCommands;
using Serilog;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Dolores.Commands.Sloganizer
{
    public class SloganizerCommand : ApplicationCommandModule
    {
        private readonly ISloganizerOptions _sloganizerOptions;
        private HttpClient _httpClient;

        public SloganizerCommand(ISloganizerOptions options, HttpClient httpClient)
        {
            _sloganizerOptions = options;
            _httpClient = httpClient;
        }

        [SlashCommand("sloganize", "creates a random slogan")]
        public async Task Sloganize(InteractionContext ctx,[Option("sloganizeWord","Word to turn into a slogan")]string sloganWord)
        {
            try 
            {
                Log.Information($"Sloganizing {sloganWord}");
                await ctx.CreateResponseAsync(InteractionResponseType.DeferredChannelMessageWithSource);

                var message = await GetSlogan(sloganWord);
                var response = new DiscordWebhookBuilder()
                    .WithContent(message);

                await ctx.EditResponseAsync(response);
            }
            catch(Exception ex)
            {
                Log.Error($"Failed to sloganize {sloganWord}",ex);
            }

        }

        internal async Task<string> GetSlogan(string sloganWord)
        {
            var request = new HttpRequestMessage(HttpMethod.Get, new Uri($"{_sloganizerOptions.BaseUrl}/en/outbound.php?slogan={sloganWord}"));
            request.Headers.Accept.Clear();

            var response = await _httpClient.SendAsync(request);
            response.EnsureSuccessStatusCode();
            var body = await response.Content.ReadAsStringAsync();
            var message = body.Replace(@"<a href='http://www.sloganizer.net/en/' title='Generated by Sloganizer.net' style='text-decoration:none;'>", "");
            message = message.Replace(@"</a>", "");
            return message;
        }
    }
}
